/*
Adam Novoa
Stack Class
CS 372
9/28/2014
*/

#include<iostream>
#include<fstream>

using namespace std;

ofstream outfile;
ifstream infile;


class List
{
	typedef char VT;
private:
	const static int SIZE = 5000;
	VT ary[SIZE];
	int pos;
	int used;

public:
	List()
	{
		pos = 0;
		used = 0;
		for (int i = 0; i < SIZE; i++)
		{
			ary[i] = ' ';
		}
		return;
	}
	List(List &s)
	{
		used = 0;
		pos = getPos();
		for (int i = 0; i < SIZE; i++)
		{
			if (s.setPos(i))
				used++;
			ary[i] = s.getElement();
		}
		setPos(pos);
	}
	VT getElement()
	{
		if (pos < used && pos >= 0)
		{
			return ary[pos];
		}
		else
		{
			return 0;
		}
	}
	bool setPos(int index)
	{
		if (index < used && index >= 0)
		{
			pos = index;
			return true;
		}
		else
		{
			return false;
		}
	}
	bool front()
	{
		if (used > 0)
		{
			setPos(0);
			return true;
		}
		else
		{
			return false;
		}
	}
	bool end()
	{
		if (used > 0)
		{
			setPos(used - 1);
		}
		else
		{
			return false;
		}
	}
	bool prev()
	{
		if (pos > 0)
		{
			pos--;
			return true;
		}
		else
		{
			return false;
		}
	}
	bool next()
	{
		if (pos < used - 1)
		{
			pos++;
			return true;
		}
		else
		{
			return false;
		}
	}
	int getPos()
	{
		return pos;
	}
	bool insertBefore(VT val)
	{
		if (used == 0)
		{
			ary[0] = val;
			used++;
			pos = 0;
			return true;
		}
		else if (used < SIZE)
		{
			for (int i = used; i >= pos; i--)
			{
				ary[i] = ary[i - 1];
			}
			ary[pos] = val;
			used++;
			return true;
		}
		else
		{
			return false;
		}
	}
	bool insertAfter(VT val)
	{

		if (used == 0)
		{
			ary[0] = val;
			used++;
			pos = 0;
			return true;
		}
		else if (used < SIZE && pos >= 0)
		{
			for (int i = used; i >= pos + 1; i--)
			{
				ary[i] = ary[i - 1];
			}
			ary[pos + 1] = val;
			used++;
			pos++;
			return true;
		}
		else
		{
			return false;
		}
	}
	int size()
	{
		return used;
	}
	bool operator==(List& b)
	{
		bool flag = false;

		if (used != b.size())
		{
			return false;
		}
		if (pos != b.getPos())
		{
			return false;
		}
		int Tpos = b.getPos();
		for (int i = 0; i < used; i++)
		{
			b.setPos(i);
			if (ary[i] != b.getElement())
			{
				return false;
			}
		}
		return true;
	}
	bool operator!=(List& b)
	{
		return !(operator==(b));
	}
	bool empty()
	{
		return !used;
	}
	void replace(VT val)
	{
		ary[pos] = val;
	}
	bool erase()
	{
		if (used > 0)
		{
			for (int i = pos; i < used; i++)
			{
				ary[i] = ary[i + 1];
			}
			used--;
			if (pos != used)
				return true;
			else
			{
				pos--;
				return true;
			}
		}
		else
		{
			return false;
		}
	}
	void clear()
	{
		for (int i = 0; i < used; i++)
		{
			ary[i] = ' ';
		}
		used = 0;
		pos = 0;
	}
	void reverse()
	{
		int temp[SIZE];
		for (int i = 0; i < used; i++)
		{
			temp[i] = ary[i];
		}
		for (int i = 0; i < used; i++)
		{
			ary[i] = temp[used - (i + 1)];
		}
	}
	void swap(List& b)
	{
		List temp(b);
		int Tpos = b.getPos();
		b.clear();
		for (int i = 0; i < SIZE; i++)
		{
			if (i < used)
			{
				b.insertAfter(ary[i]);
			}
			temp.setPos(i);
			ary[i] = temp.getElement();
		}
		b.setPos(Tpos);
		used = temp.size();
	}

	friend ostream& operator<<(ostream& out, List& l);
};

ostream& operator<<(ostream& out, List& l)
{
	int Tpos = l.getPos();

	for (int i = 0; i < l.size(); i++)
	{
		l.setPos(i);
		int val = l.getElement();
		out << left << val << " ";
	}
	l.setPos(Tpos);
	return out;
}

class Stack
{
private:
	List list1;
	char temp;
public:
	Stack()
	{

	}
	void read()
	{
		do
		{
			infile.get(temp);
			if (temp != ' ' && temp != '\n')
			{
				list1.insertAfter(temp);
			}
		} while (temp != ' ' && temp != '\n');
		return;
	}
	void readFull()
	{
		infile.get(temp);
		list1.insertAfter(temp);
		return;
	}
	void reverse()
	{
		list1.reverse();
		return;
	}
	void print()
	{
		list1.front();
		do
		{
			outfile << list1.getElement();
		}while (list1.next());
		outfile << " ";
		return;
	}
	void printFull()
	{
		list1.front();
		do
		{
			outfile << list1.getElement();
		} while (list1.next());
		return;
	}
	void clear()
	{
		list1.clear();
		return;
	}
};

int main()
{
	infile.open("StkQFile1.txt");
	outfile.open("Result.dat");
	Stack stackTest;

	while (infile)
	{
		stackTest.read();
		stackTest.reverse();
		stackTest.print();
		stackTest.clear();
	}
	infile.clear();
	infile.seekg(0);
	outfile.close();
	outfile.open("Full.dat");

	while (infile)
	{
		stackTest.readFull();
	}
	stackTest.reverse();
	stackTest.printFull();

	system("pause");
	return 0;
}
/*
original text

- .- -..-   .-.. --- -   .-. . ..-. . .-. ...   - ---   -.- . . .--. .. -. --.   ... . .--. .- .-. .- - .   .-. . -.-. --- .-. -.. ...   ..-. --- .-.   . .- -.-. ....   .--. ..- .-. -.-. .... .- ... .   .- -. -..   ... .- .-.. .   .. ..-.   -.-- --- ..-   -... ..- -.--   ...-- ----- -----   ... .... .- .-. . ...   --- ..-.   .. -... --   .---- ----- -----   ... .... .- .-. . ...   .- -   .-   - .. -- .   .-- .   .-- --- ..- .-.. -..   -.- . . .--.   ...--   .-. . -.-. --- .-. -.. ...   .. -. ... - . .- -..   --- ..-.   .--- ..- ... -   --- -. .   . .- -.-. ....   .---- ----- -----   ... .... .- .-. .   .--. ..- .-. -.-. .... .- ... .   .. ...   -.-. .- .-.. .-.. . -..   .-   - .- -..-   .-.. --- -   .- --. .- .. -.   - .... .   ..- - .. .-.. .. - -.--   --- ..-.   - .- -..-   .-.. --- -   .- -.-. -.-. --- ..- -. - .. -. --.   -... . -.-. --- -- . ...   .- .--. .--. .- .-. . -. -   .- -   - .- -..-   - .. -- .   ... ..- .--. .--. --- ... .   -.-- --- ..-   -... --- ..- --. .... -   - .... --- ... .   ...--   .---- ----- -----   ... .... .- .-. .   .-.. --- - ...   .- -   - .... .   -.-. --- ... -   --- ..-.   .---- ..... ----- ----- -----   ..-. --- .-.   - .... .   ..-. .. .-. ... -   .---- ----- ----- ----- -----   ..-. --- .-.   - .... .   ... . -.-. --- -. -..   .- -. -..   ..... ----- ----- -----   ..-. --- .-.   - .... .   - .... .. .-. -..   .. ..-.   -.-- --- ..-   -. --- .--   ... . .-.. .-..   .---- ----- -----   ... .... .- .-. . ...   --- ..-.   .. -... --   ..-. --- .-.   --... ..... ----- -----   -.-- --- ..-   -.-. .- -.   .--. .. -.-. -.-   .-- .... .. -.-. ....   .-.. --- -   - ---   ... . .-.. .-..   -... .- ... . -..   --- -.   -.-- --- ..- .-.   - .- -..-   -. . . -.. ...   --. . -. . .-. .- - .. -. --.   .-   .-.. --- ... ...   --- ..-.   --... ..... ----- -----   -.. --- .-.. .-.. .- .-. ...   .-   .-.. --- ... ...   --- ..-.   ..--- ..... ----- -----   -.. --- .-.. .-.. .- .-. ...   --- .-.   .-   --. .- .. -.   --- ..-.   ..--- ..... ----- -----   -.. --- .-.. .-.. .- .-. ...   -- .- -. -.--   .. -. ...- . ... - --- .-. ...   -.-. .... --- --- ... .   - ---   .- .-.. .-- .- -.-- ...   ... . .-.. .-..   - .... .   -- --- ... -   . -..- .--. . -. ... .. ...- .   .-.. --- -   ..-. .. .-. ... -   - .- -.- .. -. --.   .-.. --- ... ... . ...   .- ...   ... --- --- -.   .- ...   .--. --- ... ... .. -... .-.. .   -... ..- -   .- .-.. .-- .- -.-- ...   -.. . ..-. . .-. .-. .. -. --.   - .... .   -. . . -..   - ---   .--. .- -.--   - .- -..- . ...   --- -.   --. .- .. -. ...

text when every letter is reversed

- -. -..-     ..-. --- -     .-. . .-.. . .-. ...     - ---     -.- . . .--. .. .- .--     ... . .--. -. .-. -. - .     .-. . .-.- --- .-. ..- ...     .-.. --- .-.     . -. .-.- ....     .--. -.. .-. .-.- .... -. ... .     -. .- ..-     ... -. ..-. .     .. .-..     --.- --- -..     ...- -.. --.-     --... ----- -----     ... .... -. .-. . ...     --- .-..     .. ...- --     ----. ----- -----     ... .... -. .-. . ...     -. -     -.     - .. -- .     --. .     --. --- -.. ..-. ..-     -.- . . .--.     --...     .-. . .-.- --- .-. ..- ...     .. .- ... - . -. ..-     --- .-..     ---. -.. ... -     --- .- .     . -. .-.- ....     ----. ----- -----     ... .... -. .-. .     .--. -.. .-. .-.- .... -. ... .     .. ...     .-.- -. ..-. ..-. . ..-     -.     - -. -..-     ..-. --- -     -. .-- -. .. .-     - .... .     -.. - .. ..-. .. - --.-     --- .-..     - -. -..-     ..-. --- -     -. .-.- .-.- --- -.. .- - .. .- .--     ...- . .-.- --- -- . ...     -. .--. .--. -. .-. . .- -     -. -     - -. -..-     - .. -- .     ... -.. .--. .--. --- ... .     --.- --- -..     ...- --- -.. .-- .... -     - .... --- ... .     --...     ----. ----- -----     ... .... -. .-. .     ..-. --- - ...     -. -     - .... .     .-.- --- ... -     --- .-..     ----. ..... ----- ----- -----     .-.. --- .-.     - .... .     .-.. .. .-. ... -     ----. ----- ----- ----- -----     .-.. --- .-.     - .... .     ... . .-.- --- .- ..-     -. .- ..-     ..... ----- ----- -----     .-.. --- .-.     - .... .     - .... .. .-. ..-     .. .-..     --.- --- -..     .- --- --.     ... . ..-. ..-.     ----. ----- -----     ... .... -. .-. . ...     --- .-..     .. ...- --     .-.. --- .-.     ...-- ..... ----- -----     --.- --- -..     .-.- -. .-     .--. .. .-.- -.-     --. .... .. .-.- ....     ..-. --- -     - ---     ... . ..-. ..-.     ...- -. ... . ..-     --- .-     --.- --- -.. .-.     - -. -..-     .- . . ..- ...     .-- . .- . .-. -. - .. .- .--     -.     ..-. --- ... ...     --- .-..     ...-- ..... ----- -----     ..- --- ..-. ..-. -. .-. ...     -.     ..-. --- ... ...     --- .-..     ---.. ..... ----- -----     ..- --- ..-. ..-. -. .-. ...     --- .-.     -.     .-- -. .. .-     --- .-..     ---.. ..... ----- -----     ..- --- ..-. ..-. -. .-. ...     -- -. .- --.-     .. .- -... . ... - --- .-. ...     .-.- .... --- --- ... .     - ---     -. ..-. --. -. --.- ...     ... . ..-. ..-.     - .... .     -- --- ... -     . -..- .--. . .- ... .. -... .     ..-. --- -     .-.. .. .-. ... -     - -. -.- .. .- .--     ..-. --- ... ... . ...     -. ...     ... --- --- .-     -. ...     .--. --- ... ... .. ...- ..-. .     ...- -.. -     -. ..-. --. -. --.- ...     ..- . .-.. . .-. .-. .. .- .--     - .... .     .- . . ..-     - ---     .--. -. --.-     - -. -..- . ...     --- .-     .-- -. .. .- ...

text when entire file is reversed

... .- .. -. .--   .- ---   ... . -..- -. -   --.- -. .--.   --- -   ..- . . .-   . .... -   .-- .- .. .-. .-. . .-.. . ..-   ... --.- -. --. ..-. -.   - -.. ...-   . ..-. ...- .. ... ... --- .--.   ... -.   .- --- --- ...   ... -.   ... . ... ... --- ..-.   .-- .- .. -.- -. -   - ... .-. .. .-..   - --- ..-.   . -... .. ... .- . .--. -..- .   - ... --- --   . .... -   ..-. ..-. . ...   ... --.- -. --. ..-. -.   --- -   . ... --- --- .... .-.-   ... .-. --- - ... . -... .- ..   --.- .- -. --   ... .-. -. ..-. ..-. --- ..-   ----- ----- ..... ---..   .-.. ---   .- .. -. .--   -.   .-. ---   ... .-. -. ..-. ..-. --- ..-   ----- ----- ..... ---..   .-.. ---   ... ... --- ..-.   -.   ... .-. -. ..-. ..-. --- ..-   ----- ----- ..... ...--   .-.. ---   ... ... --- ..-.   -.   .-- .- .. - -. .-. . .- . .--   ... ..- . . .-   -..- -. -   .-. -.. --- --.-   .- ---   ..- . ... -. ...-   ..-. ..-. . ...   --- -   - --- ..-.   .... .-.- .. .... --.   -.- .-.- .. .--.   .- -. .-.-   -.. --- --.-   ----- ----- ..... ...--   .-. --- .-..   -- ...- ..   .-.. ---   ... . .-. -. .... ...   ----- ----- ----.   ..-. ..-. . ...   --. --- .-   -.. --- --.-   .-.. ..   ..- .-. .. .... -   . .... -   .-. --- .-..   ----- ----- ----- .....   ..- .- -.   ..- .- --- .-.- . ...   . .... -   .-. --- .-..   ----- ----- ----- ----- ----.   - ... .-. .. .-..   . .... -   .-. --- .-..   ----- ----- ----- ..... ----.   .-.. ---   - ... --- .-.-   . .... -   - -.   ... - --- ..-.   . .-. -. .... ...   ----- ----- ----.   --...   . ... --- .... -   - .... .-- -.. --- ...-   -.. --- --.-   . ... --- .--. .--. -.. ...   . -- .. -   -..- -. -   - -.   - .- . .-. -. .--. .--. -.   ... . -- --- .-.- . ...-   .-- .- .. - .- -.. --- .-.- .-.- -.   - --- ..-.   -..- -. -   .-.. ---   --.- - .. ..-. .. - -..   . .... -   .- .. -. .-- -.   - --- ..-.   -..- -. -   -.   ..- . ..-. ..-. -. .-.-   ... ..   . ... -. .... .-.- .-. -.. .--.   . .-. -. .... ...   ----- ----- ----.   .... .-.- -. .   . .- ---   - ... -.. ---.   .-.. ---   ..- -. . - ... .- ..   ... ..- .-. --- .-.- . .-.   --...   .--. . . -.-   ..- ..-. -.. --- --.   . --.   . -- .. -   -.   - -.   ... . .-. -. .... ...   ----- ----- ----.   -- ...- ..   .-.. ---   ... . .-. -. .... ...   ----- ----- --...   --.- -.. ...-   -.. --- --.-   .-.. ..   . ..-. -. ...   ..- .- -.   . ... -. .... .-.- .-. -.. .--.   .... .-.- -. .   .-. --- .-..   ... ..- .-. --- .-.- . .-.   . - -. .-. -. .--. . ...   .-- .- .. .--. . . -.-   --- -   ... .-. . .-.. . .-.   - --- ..-.   -..- -. -
*/