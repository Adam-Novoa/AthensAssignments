Microsoft (R) Macro Assembler Version 12.00.21005.1	    06/23/15 16:24:51
Triangl						     Page 1 - 1


				;Adam Novoa
				;CS 340
				;6/16/2015

				TITLE Triangle

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 74 72 69 61 6E		infileName	byte	"triangle.txt",0
	   67 6C 65 2E 74
	   78 74 00
 0000000D 00000000			infile		dword	0
 00000011  000007D0 [			buffer		byte	2000 dup(0)
	    00
	   ]
 000007E1  000000C8 [			numbers		dword	200 dup(0)
	    00000000
	   ]
 00000B01  00000003 [			triangle	dword	3 dup(?)
	    00000000
	   ]
 00000B0D 00000000			count		dword	0
 00000B11 52 65 73 75 6C		outfileName	byte	"Result.dat",0
	   74 2E 64 61 74
	   00
 00000B1C 00000000			outfile		dword	0


 00000000			.code
 00000000			main PROC
					
 00000000  8D 15 00000B11 R		lea		edx,outfileName
 00000006  E8 00000000 E		call	CreateOutputFile
 0000000B  A3 00000B1C R		mov		outfile,eax	
 00000010  8D 15 00000000 R		lea		edx,infileName
 00000016  E8 00000000 E		call	OpenInputFile
 0000001B  A3 0000000D R		mov		infile,eax
 00000020  8D 15 00000011 R		lea		edx,buffer
 00000026  B9 000007D0			mov		ecx,2000
 0000002B  E8 00000000 E		call	ReadFromFile
 00000030  8D 35 00000011 R		lea		esi,buffer
					
 00000036  8D 3D 000007E1 R		lea		edi,numbers
 0000003C  E8 00000134			call	processArray

 00000041			doAgain:	
 00000041  8D 35 000007E1 R		lea		esi,numbers
 00000047  03 35 00000B0D R		add		esi,count	;move esi to next set of numbers
 0000004D  83 05 00000B0D R		add		count,12
	   0C

 00000054			L1:
 00000054  8B 06			mov		eax,[esi]	
 00000056  83 F8 00			cmp		eax,0
 00000059  0F 84 0000010F		je		fin
 0000005F  8D 3D 00000B01 R		lea		edi,triangle
 00000065  B9 00000003			mov		ecx,3

 0000006A  8B 06		L2:	mov		eax,[esi]
 0000006C  89 07			mov		[edi],eax
 0000006E  83 C7 04			add		edi,4
 00000071  83 C6 04			add		esi,4
 00000074  E2 F4			loop	L2
 00000076  8D 3D 00000B01 R		lea		edi,triangle
					
 0000007C  E8 00000154			call	order
 00000081  89 07			mov		[edi],eax
 00000083  89 5F 04			mov		4[edi],ebx
 00000086  89 57 08			mov		8[edi],edx

 00000B20			.data
 00000B20  0000000A [			num1	byte	10 dup(?)
	    00
	   ]
 00000B2A  0000000A [			num2	byte	10 dup(?)
	    00
	   ]
 00000B34  0000000A [			num3	byte	10 dup(?),00h
	    00
	   ] 00
 00000089			.code

 00000089  8D 35 00000B20 R		lea		esi,num1
 0000008F  B9 0000000A			mov		ecx,10
 00000094  E8 000000FB			call	blankout
 00000099  83 C6 FF			add		esi,-1
 0000009C  8B 07			mov		eax,[edi]
 0000009E  E8 000001AE			call	hexToChar

 000000A3  8D 35 00000B2A R		lea		esi,num2
 000000A9  B9 0000000A			mov		ecx,10
 000000AE  E8 000000E1			call	blankout
 000000B3  83 C6 FF			add		esi,-1
 000000B6  8B 47 04			mov		eax,4[edi]
 000000B9  E8 00000193			call	hexToChar

 000000BE  8D 35 00000B34 R		lea		esi,num3
 000000C4  B9 0000000A			mov		ecx,10
 000000C9  E8 000000C6			call	blankout
 000000CE  83 C6 FF			add		esi,-1
 000000D1  8B 47 08			mov		eax,8[edi]
 000000D4  E8 00000178			call	hexToChar

 000000D9  8B 07			mov		eax,[edi]
 000000DB  8B 5F 04			mov		ebx,4[edi]
 000000DE  8B 57 08			mov		edx,8[edi]

 000000E1  E8 00000127			call	isRightTri
 000000E6  83 F8 01			cmp		eax,1
 000000E9  74 02			je		isRight
 000000EB  75 25			jne		notR

 000000ED			isRight:
 00000B3F			.data
 00000B3F 20 69 73 20 61		answer	byte	" is a right triangle."
	   20 72 69 67 68
	   74 20 74 72 69
	   61 6E 67 6C 65
	   2E
 00000B54  0D 0A 00					byte	0Dh,0Ah,00h
 000000ED			.code
 000000ED  8D 15 00000B20 R		lea		edx,num1
 000000F3  A1 00000B1C R		mov		eax,outfile
 000000F8  E8 0000012B			call	print
 000000FD  8D 15 00000B3F R		lea		edx,answer
 00000103  A1 00000B1C R		mov		eax,outfile
 00000108  E8 0000011B			call	print

 0000010D  E9 FFFFFF2F			jmp	doAgain

 00000112			notR:
 00000112  8B 07			mov		eax,[edi]
 00000114  8B 5F 04			mov		ebx,4[edi]
 00000117  8B 57 08			mov		edx,8[edi]
 0000011A  E8 0000014C			call	isTri
 0000011F  83 F8 00			cmp		eax,0
 00000122  74 25			je		notTri

 00000B57			.data
 00000B57 20 69 73 20 61		answer2	byte	" is a triangle. "
	   20 74 72 69 61
	   6E 67 6C 65 2E
	   20
 00000B67  0D 0A 00					byte	0Dh,0Ah,00h
 00000124			.code
 00000124  8D 15 00000B20 R		lea		edx,num1
 0000012A  A1 00000B1C R		mov		eax,outfile
 0000012F  E8 000000F4			call	print
 00000134  8D 15 00000B57 R		lea		edx,answer2
 0000013A  A1 00000B1C R		mov		eax,outfile
 0000013F  E8 000000E4			call	print

 00000144  E9 FFFFFEF8			jmp	doAgain
 00000149			notTri:
 00000B6A			.data
 00000B6A 20 69 73 20 6E		answer3	byte	" is not a triangle. "
	   6F 74 20 61 20
	   74 72 69 61 6E
	   67 6C 65 2E 20
 00000B7E  0D 0A 00					byte	0Dh,0Ah,00h
 00000149			.code
 00000149  8D 15 00000B20 R		lea		edx,num1
 0000014F  A1 00000B1C R		mov		eax,outfile
 00000154  E8 000000CF			call	print
 00000159  8D 15 00000B6A R		lea		edx,answer3
 0000015F  A1 00000B1C R		mov		eax,outfile
 00000164  E8 000000BF			call	print

 00000169  E9 FFFFFED3			jmp	doAgain
 0000016E			fin:
				exit
 00000175			main ENDP

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;esi start of data to be read       ;
				;edi start of location to store data;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000175			processArray PROC
 00000175  E8 0000002A		L1:	call	AtoI
 0000017A  89 07			mov		[edi],eax
 0000017C  83 C7 04			add		edi,4
 0000017F			clear:
 0000017F  46				inc		esi
 00000180  8A 1E			mov		bl,[esi]
 00000182  80 FB 00			cmp		bl,0	;end of file
 00000185  74 0C			je		L2
 00000187  80 FB 30			cmp		bl,'0'	;NaN
 0000018A  7C F3			jl		clear
 0000018C  80 FB 39			cmp		bl,'9'	;NaN
 0000018F  7F EE			jg		clear
 00000191  EB E2			jmp		L1

 00000193			L2:
 00000193  C3				ret
 00000194			processArray ENDP


 00000194			blankout PROC
 00000194  B0 20		L2:	mov		al,' '
 00000196  88 06			mov 	[esi],al
 00000198  83 C1 FF			add		ecx,-1
 0000019B  83 C6 01			add		esi,1
 0000019E  83 F9 00			cmp		ecx,0
 000001A1  75 F1			jne		L2
 000001A3  C3				ret
 000001A4			blankout ENDP

 000001A4			AtoI PROC
 000001A4  B8 00000000			mov		eax,0
 000001A9  BB 0000000A			mov		ebx,10
 000001AE  B9 00000000		L1:	mov		ecx,0
 000001B3  8A 0E			mov		cl,[esi]
 000001B5  80 F9 30			cmp		cl,'0'
 000001B8  7C 0F			JL		L2
 000001BA  80 F9 39			cmp		cl,'9'
 000001BD  7F 0A			JG		L2
 000001BF  80 E9 30			sub		cl,'0'
 000001C2  F7 EB			IMUL	ebx
 000001C4  03 C1			add		eax,ecx
 000001C6  46				inc		esi
 000001C7  EB E5			jmp		L1

 000001C9			L2:
 000001C9  C3				ret
 000001CA			AtoI ENDP

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;result                             ;
				;eax contains highest number        ;
				;ebx contains lowest or equal number;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001CA			highest PROC
 000001CA  3B C3			cmp eax,ebx
 000001CC  7F 06			jg	done
 000001CE  8B C8			mov ecx,eax
 000001D0  8B C3			mov eax,ebx
 000001D2  8B D9			mov ebx,ecx
 000001D4			done:
 000001D4  C3				ret
 000001D5			highest ENDP

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;edi points to first of three numbers;
				;Result								 ;
				;eax has highest number				 ;
				;ebx has middle number				 ;
				;edx has lowest number				 ;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001D5			order PROC
 00000B81			.data
 00000B81 00000000			temp dword ?
 00000B85 00000000			top dword ?
 000001D5			.code
 000001D5  8B 07			mov		eax,[edi]
 000001D7  83 C7 04			add		edi,4
 000001DA  8B 1F			mov		ebx,[edi]
 000001DC  E8 FFFFFFE9			call	highest
 000001E1  89 1D 00000B81 R		mov		temp,ebx
 000001E7  83 C7 04			add		edi,4
 000001EA  8B 1F			mov		ebx,[edi]
 000001EC  E8 FFFFFFD9			call	highest
 000001F1  A3 00000B85 R		mov		top,eax
 000001F6  A1 00000B81 R		mov		eax,temp
 000001FB  E8 FFFFFFCA			call	highest
 00000200  8B D3			mov		edx,ebx
 00000202  8B D8			mov		ebx,eax
 00000204  A1 00000B85 R		mov		eax,top
 00000209  83 C7 F8			add		edi,-8
 0000020C  C3				ret
 0000020D			order ENDP


				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;eax has highest number			   ;
				;ebx has middle number			   ;
				;edx has lowest number			   ;
				;result							   ;
				;eax has 1 for true or 0 for false ;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000020D			isRightTri PROC
 0000020D  0F AF C0			imul	eax,eax
 00000210  0F AF DB			imul	ebx,ebx
 00000213  0F AF D2			imul	edx,edx
 00000216  03 DA			add		ebx,edx
 00000218  3B C3			cmp		eax,ebx
 0000021A  75 06			jne		neq
 0000021C  B8 00000001			mov		eax,1
 00000221  C3				ret
 00000222			neq:
 00000222  B8 00000000			mov		eax,0
 00000227  C3				ret
 00000228			isRightTri ENDP

 00000228			print PROC
 00000B89			.data
 00000B89 00000000			file	dword	?
 00000228			.code
 00000228  A3 00000B89 R		mov		file,eax
 0000022D  8B F2			mov		esi,edx;
 0000022F			again:	
 0000022F  8B D6			mov		edx,esi
 00000231  A1 00000B89 R		mov		eax,file
 00000236  BB 00000000			mov		ebx,0
 0000023B  B9 00000001			mov		ecx,1
 00000240  8A 1E			mov		bl,[esi]
 00000242  46				inc		esi
 00000243  80 FB 00			cmp		bl,0
 00000246  74 08			je		goon
 00000248  E8 00000000 E		call	WriteToFile
 0000024D  42				inc		edx
 0000024E  EB DF			jmp		again
 00000250			goon:
 00000250  C3				ret
 00000251			print ENDP

 00000251			hexToChar PROC

 00000251  BA 00000000		L4:	mov edx,0
 00000256  BB 0000000A			mov ebx,10
 0000025B  F7 FB			IDIV ebx
 0000025D  80 C2 30			add dl,'0'
 00000260  88 16			mov [esi],dl
 00000262  83 C6 FF			add esi,-1
 00000265  83 F8 00			cmp eax,0
 00000268  75 E7			jne L4
 0000026A  C3				ret
 0000026B			hexToChar ENDP

 0000026B			isTri Proc
 0000026B  03 DA			add	ebx,edx
 0000026D  3B C3			cmp	eax,ebx
 0000026F  7F 06			jg	nTri
 00000271  B8 00000001			mov	eax,1
 00000276  C3				ret
 00000277			nTri:
 00000277  B8 00000000			mov	eax,0
 0000027C  C3				ret
 0000027D			isTri ENDP

				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    06/23/15 16:24:51
Triangl						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000B8D Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000027D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AtoI . . . . . . . . . . . . . .	P Near	 000001A4 _TEXT	Length= 00000026 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000001AE _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000001C9 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
blankout . . . . . . . . . . . .	P Near	 00000194 _TEXT	Length= 00000010 Public STDCALL
  L2 . . . . . . . . . . . . . .	L Near	 00000194 _TEXT	
hexToChar  . . . . . . . . . . .	P Near	 00000251 _TEXT	Length= 0000001A Public STDCALL
  L4 . . . . . . . . . . . . . .	L Near	 00000251 _TEXT	
highest  . . . . . . . . . . . .	P Near	 000001CA _TEXT	Length= 0000000B Public STDCALL
  done . . . . . . . . . . . . .	L Near	 000001D4 _TEXT	
isRightTri . . . . . . . . . . .	P Near	 0000020D _TEXT	Length= 0000001B Public STDCALL
  neq  . . . . . . . . . . . . .	L Near	 00000222 _TEXT	
isTri  . . . . . . . . . . . . .	P Near	 0000026B _TEXT	Length= 00000012 Public STDCALL
  nTri . . . . . . . . . . . . .	L Near	 00000277 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000175 Public STDCALL
  doAgain  . . . . . . . . . . .	L Near	 00000041 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 00000054 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000006A _TEXT	
  isRight  . . . . . . . . . . .	L Near	 000000ED _TEXT	
  notR . . . . . . . . . . . . .	L Near	 00000112 _TEXT	
  notTri . . . . . . . . . . . .	L Near	 00000149 _TEXT	
  fin  . . . . . . . . . . . . .	L Near	 0000016E _TEXT	
order  . . . . . . . . . . . . .	P Near	 000001D5 _TEXT	Length= 00000038 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
print  . . . . . . . . . . . . .	P Near	 00000228 _TEXT	Length= 00000029 Public STDCALL
  again  . . . . . . . . . . . .	L Near	 0000022F _TEXT	
  goon . . . . . . . . . . . . .	L Near	 00000250 _TEXT	
processArray . . . . . . . . . .	P Near	 00000175 _TEXT	Length= 0000001F Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000175 _TEXT	
  clear  . . . . . . . . . . . .	L Near	 0000017F _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000193 _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
answer2  . . . . . . . . . . . .	Byte	 00000B57 _DATA	
answer3  . . . . . . . . . . . .	Byte	 00000B6A _DATA	
answer . . . . . . . . . . . . .	Byte	 00000B3F _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000011 _DATA	
count  . . . . . . . . . . . . .	DWord	 00000B0D _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
file . . . . . . . . . . . . . .	DWord	 00000B89 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
infileName . . . . . . . . . . .	Byte	 00000000 _DATA	
infile . . . . . . . . . . . . .	DWord	 0000000D _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
num1 . . . . . . . . . . . . . .	Byte	 00000B20 _DATA	
num2 . . . . . . . . . . . . . .	Byte	 00000B2A _DATA	
num3 . . . . . . . . . . . . . .	Byte	 00000B34 _DATA	
numbers  . . . . . . . . . . . .	DWord	 000007E1 _DATA	
outfileName  . . . . . . . . . .	Byte	 00000B11 _DATA	
outfile  . . . . . . . . . . . .	DWord	 00000B1C _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
temp . . . . . . . . . . . . . .	DWord	 00000B81 _DATA	
top  . . . . . . . . . . . . . .	DWord	 00000B85 _DATA	
triangle . . . . . . . . . . . .	DWord	 00000B01 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
